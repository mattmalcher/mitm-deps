- name: Install packages
  apt:
    name: [
      'aptitude',
      'dnsmasq',
      'ncdu'
    ]
    state: present
    force_apt_get: true

- name: Setup dnsmasq conf dir
  lineinfile:
    dest: /etc/dnsmasq.conf
    state: present
    regexp: '^conf-dir='
    line: 'conf-dir=/etc/dnsmasq.d/,*.conf'
  notify: restart dnsmasq

- name: Install dnsmasq dhcpconf
  ansible.builtin.template:
    src: dnsmasq-mitm.conf
    dest: /etc/dnsmasq.d/mitm
    owner: root
    group: root
    mode: 0644
  notify: restart mitmdump

- name: download mitmproxy
  get_url:
    url="https://snapshots.mitmproxy.org/4.0.4/mitmproxy-4.0.4-linux.tar.gz"
    dest="~/mitmproxy-4.0.4-linux.tar.gz"

- name: Install mitmproxy
  unarchive:
    src: ~/mitmproxy-4.0.4-linux.tar.gz
    dest: /usr/local/bin
    remote_src: yes

- name: Create mitmproxy dir
  file:
    path: /home/vagrant/.mitmproxy
    state: directory
    owner: vagrant
    group: vagrant

- name: Push mitmdump.service
  ansible.builtin.template:
    src: mitmdump.service
    dest: /lib/systemd/system/mitmdump.service
    owner: root
    group: root
    mode: 0644
  notify: restart mitmdump

- name: Install mitmproxy's certs
  become: no
  copy: 
    src: "../certs/{{item}}"
    dest: "/home/vagrant/.mitmproxy/{{item}}"
    owner: vagrant
    group: vagrant
    mode: 0644
  notify: restart mitmdump
  with_items:
    - mitmproxy-ca-cert.cer
    - mitmproxy-ca-cert.p12
    - mitmproxy-ca-cert.pem
    - mitmproxy-ca.pem
    - mitmproxy-dhparam.pem

- name: Enable and start mitmdump service
  systemd:
    name: mitmdump
    state: started
    enabled: yes
    daemon_reload: yes

# ROUTING
- name: Flush iptables
  iptables:
    flush: true
- name: Flush iptables nat table
  iptables: 
    flush: true
    table: nat
- name: Flush iptables mangle table
  iptables: 
    flush: true
    table: mangle
- name: Flush iptables raw table
  iptables: 
    flush: true
    table: raw
- iptables:
    action: append
    chain: FORWARD
    in_interface: eth1
    source: 10.0.3.0/255.255.255.0
    jump: ACCEPT
- iptables:
    action: append
    chain: FORWARD
    in_interface: eth0
    source: 10.0.3.0/255.255.255.0
    jump: ACCEPT
- name: iptables postrouting
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: eth0
    jump: MASQUERADE
- sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
- sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: 0
    sysctl_set: yes
- iptables:
    action: insert
    chain: INPUT
    rule_num: 1
    in_interface: lo
    jump: ACCEPT
- iptables:
    action: insert
    chain: INPUT
    rule_num: 1
    in_interface: eth1
    jump: ACCEPT
- iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
- name: Route port 80 through mitmproxy
  iptables: 
    table: nat
    chain: PREROUTING
    in_interface: eth1
    protocol: tcp
    destination_port: 80
    jump: REDIRECT
    to_ports: 8080
- name: Route port 443 through mitmproxy
  iptables: 
    table: nat
    chain: PREROUTING
    in_interface: eth1
    protocol: tcp
    destination_port: 443
    jump: REDIRECT
    to_ports: 8080
